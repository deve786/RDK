name: Build Android APK

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Setup Java (Temurin 17)
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Install Android SDK command-line tools and components
      run: |
        ANDROID_SDK_ROOT="$RUNNER_TEMP/android-sdk"
        mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
        cd "$ANDROID_SDK_ROOT/cmdline-tools"
        curl -sS https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -o cmdline.zip
        unzip -q cmdline.zip
        mv cmdline-tools latest || true
        export PATH="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH"
        yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$ANDROID_SDK_ROOT" --install "platform-tools" "platforms;android-33" "build-tools;33.0.2"

    - name: Accept Android SDK licenses
      run: |
        ANDROID_SDK_ROOT="$RUNNER_TEMP/android-sdk"
        yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --licenses --sdk_root="$ANDROID_SDK_ROOT"

    - name: Install project dependencies
      run: npm ci || npm install

    - name: Build web assets
      run: npm run build

    - name: Add Android platform (if missing) and sync web assets
      run: |
        npx cap add android || true
        npx cap sync android

    - name: Build debug APK
      working-directory: android
      run: ./gradlew assembleDebug --no-daemon

    - name: Upload debug APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug-apk
        path: android/app/build/outputs/apk/debug/app-debug.apk
